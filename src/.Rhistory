library(WikidataQueryServiceR)
library(WikidataQueryServiceR)
query_wikidata('SELECT ?cell_type ?cell_typeLabel (count(?marker) as ?marker_count)
WHERE
{
?cell_type wdt:P31/wdt:P279* wd:Q189118.
?cell_type wdt:P703 wd:Q83310.
?cell_type wdt:P8872 ?marker.
SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
}
GROUP BY ?cell_type ?cell_typeLabel
')
library(WikidataQueryServiceR)
mm = query_wikidata('SELECT ?cell_type ?cell_typeLabel (count(?marker) as ?marker_count)
WHERE
{
?cell_type wdt:P31/wdt:P279* wd:Q189118.
?cell_type wdt:P703 wd:Q83310.
?cell_type wdt:P8872 ?marker.
SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
}
GROUP BY ?cell_type ?cell_typeLabel
')
hs = query_wikidata('SELECT ?cell_type ?cell_typeLabel (count(?marker) as ?marker_count)
WHERE
{
?cell_type wdt:P31/wdt:P279* wd:Q189118.
?cell_type wdt:P703 wd:Q15978631.
?cell_type wdt:P8872 ?marker.
SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
}
GROUP BY ?cell_type ?cell_typeLabel')
library(WikidataQueryServiceR)
mm = query_wikidata('SELECT ?cell_type ?cell_typeLabel (count(?marker) as ?marker_count)
WHERE
{
?cell_type wdt:P31/wdt:P279* wd:Q189118.
?cell_type wdt:P703 wd:Q83310.
?cell_type wdt:P8872 ?marker.
SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
}
GROUP BY ?cell_type ?cell_typeLabel
')
hs = query_wikidata('SELECT ?cell_type ?cell_typeLabel (count(?marker) as ?marker_count)
WHERE
{
?cell_type wdt:P31/wdt:P279* wd:Q189118.
?cell_type wdt:P703 wd:Q15978631.
?cell_type wdt:P8872 ?marker.
SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
}
GROUP BY ?cell_type ?cell_typeLabel')
hs
mm
hs[,"marker_count"]
marker_count = data.frame()
marker_count = data.frame(hs[,"marker_count"])
marker_count = data.frame(hs[,"marker_count"], "human")
marker_count = rbind(marker_count_human, marker_count_mouse)
marker_count_mouse = data.frame(mm[,"marker_count"], "mouse")
marker_count_human = data.frame(hs[,"marker_count"], "human")
marker_count = rbind(marker_count_human, marker_count_mouse)
marker_count_mouse
marker_count_mouse = data.frame(mm[,"marker_count"], "mouse")
colnames(marker_count_mouse) = c("marker_count", "species")
marker_count_human = data.frame(hs[,"marker_count"], "human")
colnames(marker_count_human) = c("marker_count", "species")
marker_count = rbind(marker_count_human, marker_count_mouse)
marker_count
ggplot(marker_count)
library(ggplot2)
library(ggplot2)
ggplot(marker_count)
ggplot(marker_count, aes(x=species, y=marker_count))
library(ggplot2)
ggplot(marker_count, aes(x=species, y=marker_count)) +
geom_boxplot()
library(ggplot2)
ggplot(marker_count, aes(x=species, y=marker_count, color = species)) +
geom_boxplot()
library(ggplot2)
ggplot(marker_count, aes(x=species, y=marker_count, fill = species)) +
geom_boxplot()
library(ggplot2)
ggplot(marker_count, aes(x=species, y=marker_count, fill = species)) +
geom_violin()
library(ggplot2)
ggplot(marker_count, aes(x=species, y=marker_count, fill = species)) +
geom_jitter()
library(ggplot2)
ggplot(marker_count, aes(x=species, y=marker_count, fill = species)) +
geom_jitter(width = 0.1)
library(ggplot2)
ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.7)
library(ggplot2)
ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.7) +
theme_classic()
library(ggplot2)
ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.7) +
theme_classic() +
scale_color_manual(values=c("red", "blue"))
library(ggplot2)
ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.7) +
theme_classic() +
scale_color_manual(values=c("red", "blue")) +
ylab("# markers per cell type") +
xlab("Found in species") +
theme(
legend.text = element_text(color = "red", size = 10)
)
library(ggplot2)
ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.7) +
theme_classic() +
scale_color_manual(values=c("red", "blue")) +
ylab("# markers per cell type") +
xlab("Found in species") +
theme(
axis.text = element_text(size = 14)
)
library(ggplot2)
ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.7) +
theme_classic() +
scale_color_manual(values=c("red", "blue")) +
ylab("# markers per cell type") +
xlab("Found in species") +
theme(
axis.title = element_text(size = 14),
axis.text = element_text(size = 14)
)
marker_count_mouse = data.frame(mm[,"marker_count"], "Mus musculus")
colnames(marker_count_mouse) = c("marker_count", "species")
marker_count_human = data.frame(hs[,"marker_count"], "Homo sapiens")
colnames(marker_count_human) = c("marker_count", "species")
marker_count = rbind(marker_count_human, marker_count_mouse)
marker_count
library(ggplot2)
ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.7) +
theme_classic() +
scale_color_manual(values=c("red", "blue")) +
ylab("# markers per cell type") +
xlab("Found in taxon") +
theme(
axis.title = element_text(size = 14),
axis.text = element_text(size = 14, face = "italic"))
)
library(ggplot2)
ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.7) +
theme_classic() +
scale_color_manual(values=c("red", "brown")) +
ylab("# markers per cell type") +
xlab("Found in taxon") +
theme(
axis.title = element_text(size = 14),
axis.text = element_text(size = 14, face = "italic"))
)
library(ggplot2)
ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.7) +
theme_classic() +
scale_color_manual(values=c("purple", "orange")) +
ylab("# markers per cell type") +
xlab("Found in taxon") +
theme(
axis.title = element_text(size = 14),
axis.text = element_text(size = 14, face = "italic"))
)
library(ggplot2)
ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.7) +
theme_classic() +
scale_color_manual(values=c("purple", "orange")) +
ylab("# markers per cell type") +
xlab("Found in taxon") +
theme(
axis.title = element_text(size = 14),
axis.text.y = element_text(size = 11),
axis.text = element_text(size = 14, face = "italic"))
)
library(ggplot2)
ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.7) +
theme_classic() +
scale_color_manual(values=c("purple", "orange")) +
ylab("Number of markers per cell type") +
xlab("Found in taxon") +
theme(
axis.title = element_text(size = 14),
axis.text.y = element_text(size = 11),
axis.text = element_text(size = 14, face = "italic"))
library(ggplot2)
ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.7) +
theme_classic() +
scale_color_manual(values=c("purple", "darkorange")) +
ylab("Number of markers per cell type") +
xlab("Found in taxon") +
theme(
axis.title = element_text(size = 14),
axis.text.y = element_text(size = 11),
axis.text = element_text(size = 14, face = "italic"))
library(ggplot2)
ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.8) +
theme_classic() +
scale_color_manual(values=c("purple", "darkorange")) +
ylab("Number of markers per cell type") +
xlab("Found in taxon") +
theme(
axis.title = element_text(size = 14),
axis.text.y = element_text(size = 11),
axis.text = element_text(size = 14, face = "italic"))
library(ggplot2)
ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.7) +
theme_classic() +
scale_color_manual(values=c("purple", "darkorange")) +
ylab("Number of markers per cell type") +
xlab("Found in taxon") +
theme(
axis.title = element_text(size = 14),
axis.text.y = element_text(size = 11),
axis.text = element_text(size = 14, face = "italic"))
ggsave(p, height = 7, width = 5)
library(ggplot2)
p <- ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.7) +
theme_classic() +
scale_color_manual(values=c("purple", "darkorange")) +
ylab("Number of markers per cell type") +
xlab("Found in taxon") +
theme(
axis.title = element_text(size = 14),
axis.text.y = element_text(size = 11),
axis.text = element_text(size = 14, face = "italic"))
ggsave(p, height = 7, width = 5)
library(ggplot2)
p <- ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.7) +
theme_classic() +
scale_color_manual(values=c("purple", "darkorange")) +
ylab("Number of markers per cell type") +
xlab("Found in taxon") +
theme(
axis.title = element_text(size = 14),
axis.text.y = element_text(size = 11),
axis.text = element_text(size = 14, face = "italic"))
ggsave("markers", p, height = 7, width = 5)
library(ggplot2)
p <- ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.7) +
theme_classic() +
scale_color_manual(values=c("purple", "darkorange")) +
ylab("Number of markers per cell type") +
xlab("Found in taxon") +
theme(
axis.title = element_text(size = 14),
axis.text.y = element_text(size = 11),
axis.text = element_text(size = 14, face = "italic"))
ggsave(filename = "markers.pdf", p, height = 7, width = 5)
ggsave(filename = "markers.pdf", p, height = 5, width = 5)
library(ggplot2)
p <- ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.7) +
theme_classic() +
scale_color_manual(values=c("purple", "darkorange")) +
ylab("Number of markers per cell type") +
xlab("Found in taxon") +
theme(
axis.title = element_text(size = 14),
axis.text.y = element_text(size = 11),
axis.text = element_text(size = 14, face = "italic")) +
theme(legend. title = element_blank())
library(ggplot2)
p <- ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.7) +
theme_classic() +
scale_color_manual(values=c("purple", "darkorange")) +
ylab("Number of markers per cell type") +
xlab("Found in taxon") +
theme(
axis.title = element_text(size = 14),
axis.text.y = element_text(size = 11),
axis.text = element_text(size = 14, face = "italic")) +
theme(legend.title = element_blank())
ggsave(filename = "markers.pdf", p, height = 5, width = 5)
library(ggplot2)
p <- ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.7) +
theme_classic() +
scale_color_manual(values=c("purple", "darkorange")) +
ylab("Number of markers per cell type") +
xlab("Found in taxon") +
theme(
axis.title = element_text(size = 14),
axis.text.y = element_text(size = 11),
axis.text = element_text(size = 14, face = "italic")) +
theme(legend = element_blank())
library(ggplot2)
p <- ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.7) +
theme_classic() +
scale_color_manual(values=c("purple", "darkorange")) +
ylab("Number of markers per cell type") +
xlab("Found in taxon") +
theme(
axis.title = element_text(size = 14),
axis.text.y = element_text(size = 11),
axis.text = element_text(size = 14, face = "italic")) +
theme(legend.position = "none")
ggsave(filename = "markers.pdf", p, height = 5, width = 5)
library(ggplot2)
p <- ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.7) +
theme_classic() +
scale_color_manual(values=c("purple", "darkorange")) +
ylab("Number of markers per cell type") +
xlab("Found in taxon") +
theme(
axis.title = element_text(size = 14),
axis.text.y = element_text(size = 11),
axis.text = element_text(size = 14, face = "italic")) +
theme(legend.position = "none")  +
theme(
axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm")),
axis.title.y = element_text(margin = unit(c(0, 3, 0, 0), "mm"), angle = 0)
)
ggsave(filename = "markers.pdf", p, height = 5, width = 5)
library(ggplot2)
p <- ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.7) +
theme_classic() +
scale_color_manual(values=c("purple", "darkorange")) +
ylab("Number of markers per cell type") +
xlab("Found in taxon") +
theme(
axis.title = element_text(size = 14),
axis.text.y = element_text(size = 11),
axis.text = element_text(size = 14, face = "italic")) +
theme(legend.position = "none")  +
theme(
axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm")),
axis.title.y = element_text(margin = unit(c(0, 3, 0, 0), "mm"), angle = 0)
)
ggsave(filename = "markers.pdf", p, height = 5, width = 5)
library(ggplot2)
p <- ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.7) +
theme_classic() +
scale_color_manual(values=c("purple", "darkorange")) +
ylab("Number of markers per cell type") +
xlab("Found in taxon") +
theme(
axis.title = element_text(size = 14),
axis.text.y = element_text(size = 11),
axis.text = element_text(size = 14, face = "italic")) +
theme(legend.position = "none")  +
theme(
axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm")),
axis.title.y = element_text(margin = unit(c(0, 3, 0, 0), "mm"))
)
ggsave(filename = "markers.pdf", p, height = 5, width = 5)
library(ggplot2)
p <- ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.7) +
theme_classic() +
scale_color_manual(values=c("purple", "darkorange")) +
ylab("Number of markers per cell type") +
xlab("Found in taxon") +
theme(
axis.title = element_text(size = 14),
axis.text.y = element_text(size = 11),
axis.text = element_text(size = 14, face = "italic")) +
theme(legend.position = "none")  +
theme(
axis.title.x = element_text(margin = unit(c(10, 0, 0, 0), "mm")),
axis.title.y = element_text(margin = unit(c(0, 10, 0, 0), "mm"))
)
ggsave(filename = "markers.pdf", p, height = 5, width = 5)
library(ggplot2)
p <- ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.7) +
theme_classic() +
scale_color_manual(values=c("purple", "darkorange")) +
ylab("Number of markers per cell type") +
xlab("Found in taxon") +
theme(
axis.title = element_text(size = 14),
axis.text.y = element_text(size = 11),
axis.text = element_text(size = 14, face = "italic")) +
theme(legend.position = "none")  +
theme(
axis.title.x = element_text(margin = unit(c(7, 0, 0, 0), "mm")),
axis.title.y = element_text(margin = unit(c(0, 7, 0, 0), "mm"))
)
ggsave(filename = "markers.pdf", p, height = 5, width = 5)
library(WikidataQueryServiceR)
gene_disease = query_wikidata('SELECT ?geneLabel ?cellTypeLabel
WHERE
{
?protein wdt:P682 wd:Q1456827. # protein molecular process neurogenesis
?protein wdt:P702 ?gene.       # protein encoded by gene
{?gene wdt:P31 wd:Q277338.}    # gene is an instance of a pseudogene
UNION                          # or
{?gene wdt:P31 wd:Q7187.}      # gene is an instance of a gene
?gene wdt:P703 wd:Q15978631.   # gene is found in taxon Homo sapiens
?cellType wdt:P8872 ?gene.     # cell type has marker gene
?cellType rdfs:label ?cellTypeLabel.
?gene   rdfs:label ?geneLabel.
FILTER(LANG(?cellTypeLabel) = "en")
FILTER(LANG(?geneLabel) = "en")
}
')
install.packages("kableExtra")
kbl(gene_disease) %>%
kable_classic()
library(magrittr)
kbl(gene_disease) %>%
kable_classic()
library(kableExtra)
kbl(gene_disease) %>%
kable_classic()
library(knitr)
kable(head(iris[,1:3]), format = "markdown")
library(knitr)
kable(head(gene_disease[,1:3]), format = "markdown", results="asis")
library(knitr)
kable(head(gene_disease[,1:3]), format = "markdown")
library(knitr)
kable(head(gene_disease), format = "markdown")
library(knitr)
kable(head(gene_disease), format = "markdown", results="asis")
library(knitr)
kable(head(gene_disease), format = "markdown", results="asis")
library(knitr)
kable(head(gene_disease), format = "markdown", results="as is")
library(ascii)
install.packages(ascii)
install.packages("ascii")
library(ascii)
print(ascii(head(iris[,1:3])), type = 'pandoc')
print(ascii(head(iris[,1:3])), type = 'github')
?ascii
library(ascii)
print(ascii(head(iris[,1:3])))
library(ascii)
print(ascii(head(iris[,1:3])), type = 'pandoc')
print(ascii(head(gene_disease, 5)), type = 'pandoc')
library(ascii)
print(ascii(head(gene_disease, 10)), type = 'pandoc')
