cts = query_wikidata('SELECT ?cell1Label ?cell2Label
WHERE
{
?cell1 wdt:P31 wd:Q189118.
?cell2 wdt:P31 wd:Q189118.
?cell1 wdt:P279 ?cell2.
SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
}')
library(WikidataQueryServiceR)
mm = query_wikidata('SELECT ?cell_type ?cell_typeLabel (count(?marker) as ?marker_count)
WHERE
{
?cell_type wdt:P31/wdt:P279* wd:Q189118.
?cell_type wdt:P703 wd:Q83310.
?cell_type wdt:P8872 ?marker.
SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
}
GROUP BY ?cell_type ?cell_typeLabel
')
hs = query_wikidata('SELECT ?cell_type ?cell_typeLabel (count(?marker) as ?marker_count)
WHERE
{
?cell_type wdt:P31/wdt:P279* wd:Q189118.
?cell_type wdt:P703 wd:Q15978631.
?cell_type wdt:P8872 ?marker.
SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
}
GROUP BY ?cell_type ?cell_typeLabel')
cts = query_wikidata('SELECT ?cell1Label ?cell2Label
WHERE
{
?cell1 wdt:P31 wd:Q189118.
?cell2 wdt:P31 wd:Q189118.
?cell1 wdt:P279 ?cell2.
SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
}')
cts = query_wikidata('SELECT ?cell1Label ?cell2Label
WHERE
{
?cell1 wdt:P31 wd:Q189118.
?cell2 wdt:P31 wd:Q189118.
?cell1 wdt:P279 ?cell2.
SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
}')
cts
install.packages("ggnetwork")
library(network)
library(sna)
library(igraph)
library(network)
library(sna)
library(igraph)
cts <- as.matrix(cts) #igraph wants our data in matrix format
cts <- graph_from_edgelist(cts, directed=TRUE)
library(intergraph)
library(intergraph)
ig_obj <- graph_from_edgelist(cts, directed=TRUE)
net_obj <- intergraph::asNetwork(ig_obj)
library(network)
library(sna)
library(igraph)
library(intergraph)
cts <- as.matrix(cts) #igraph wants our data in matrix format
ig_obj <- graph_from_edgelist(cts, directed=TRUE)
cts = query_wikidata('SELECT ?cell1Label ?cell2Label
WHERE
{
?cell1 wdt:P31 wd:Q189118.
?cell2 wdt:P31 wd:Q189118.
?cell1 wdt:P279 ?cell2.
SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
}')
cts
cts <- as.matrix(cts) #igraph wants our data in matrix format
ig_obj <- graph_from_edgelist(cts, directed=TRUE)
net_obj <- intergraph::asNetwork(ig_obj)
m <-    network::as.matrix.network.adjacency(net_obj)
m <-    network::as.matrix.network.adjacency(net_obj)
ggnetwork(net_obj, layout = "fruchtermanreingold", cell.jitter = 0.75)
library(ggnetwork)
ggnetwork(net_obj, layout = "fruchtermanreingold", cell.jitter = 0.75)
ggplot(n)
n <- ggnetwork(net_obj, layout = "fruchtermanreingold", cell.jitter = 0.75)
n <- ggnetwork(net_obj, layout = "fruchtermanreingold", cell.jitter = 0.75)
ggplot(n)
ggplot(net_obj, layout = "fruchtermanreingold", cell.jitter = 0.75)
ggplot(net_obj)
ggplot(net_obj) +
geom_edges(aes(linetype = type), color = "grey50") +
theme_blank()
n <- ggnetwork(net_obj, layout = "fruchtermanreingold", cell.jitter = 0.75)
n <- ggnetwork(net_obj, layout = "fruchtermanreingold", cell.jitter = 0.75)
ggplot(n) +
geom_edges(color = "grey50") +
theme_blank()
n
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(linetype = type), color = "grey50") +
theme_blank()
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(color = "grey50") +
theme_blank()
n <- network(rgraph(10, tprob = 0.2), directed = FALSE)
n
n %v% "family" <- sample(letters[1:3], 10, replace = TRUE)
n
n %v% "family" <- sample(letters[1:3], 10, replace = TRUE)
e <- network.edgecount(n)
set.edge.attribute(n, "type", sample(letters[24:26], e, replace = TRUE))
set.edge.attribute(n, "day", sample(1:3, e, replace = TRUE))
n <- network(rgraph(10, tprob = 0.2), directed = FALSE)
n %v% "family" <- sample(letters[1:3], 10, replace = TRUE)
e <- network.edgecount(n)
network::set.edge.attribute(n, "type", sample(letters[24:26], e, replace = TRUE))
network::set.edge.attribute(n, "day", sample(1:3, e, replace = TRUE))
ggnetwork(n, layout = "fruchtermanreingold", cell.jitter = 0.75)
ggplot(n)
ggplot(n)+
geom_edges(aes(linetype = type), color = "grey50") +
theme_blank()
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(linetype = type), color = "grey50") +
theme_blank()
n <- ggnetwork(ig_obj, layout = "fruchtermanreingold", cell.jitter = 0.75)
n <- ggnetwork(net_obj, layout = "fruchtermanreingold", cell.jitter = 0.75)
vertex_attr(ig_obj)
vertex_attr(ig_obj, name="name")
nodes = vertex_attr(ig_obj, name="name")
for (name in nodes)
{
print(name)
}
nodes = vertex_attr(ig_obj, name="name")
species = c()
species_of_cell_type = ""
for (name in nodes)
{
if (grepl("human", name, fixed = TRUE)){
species_of_cell_type = "human"
} else if (grepl("mouse", name, fixed = TRUE)){
species_of_cell_type = "mouse"
} else {
species_of_cell_type = "none"
}
species = c(species, species_of_cell_type)
}
species
nodes = vertex_attr(ig_obj, name="name")
species = c()
color = ""
for (name in nodes)
{
if (grepl("human", name, fixed = TRUE)){
color = "purple"
} else if (grepl("mouse", name, fixed = TRUE)){
color = "darkorange"
} else {
color = "black"
}
species = c(species, color)
}
g <- ig_obj %>%
set_vertex_attr("color", value = color)
ggnetwork(g)
g <- ig_obj %>%
set_vertex_attr("color", value = color)
net_obj <- intergraph::asNetwork(g)
n <- ggnetwork(net_obj, layout = "fruchtermanreingold", cell.jitter = 0.75)
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(color = "grey50") +
theme_blank()
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(color = color) +
theme_blank()
g <- ig_obj %>%
set_vertex_attr("color", value = color)
net_obj <- intergraph::asNetwork(g)
n <- ggnetwork(net_obj, layout = "fruchtermanreingold", cell.jitter = 0.75)
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend, color = color)) +
geom_edges() +
theme_blank()
nodes = vertex_attr(ig_obj, name="name")
species_vector = c()
species = ""
for (name in nodes)
{
if (grepl("human", name, fixed = TRUE)){
species = "Homo sapiens"
} else if (grepl("mouse", name, fixed = TRUE)){
species = "Mus musculus"
} else {
species = "black"
}
species_vector = c(species_vector, species)
}
g <- ig_obj %>%
set_vertex_attr("species", value = species_vector)
net_obj <- intergraph::asNetwork(g)
n <- ggnetwork(net_obj, layout = "fruchtermanreingold", cell.jitter = 0.75)
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges() +
theme_blank()
head(ggnetwork(n))
g <- ig_obj %>%
set_vertex_attr("species", value = species_vector)
net_obj <- intergraph::asNetwork(g)
n <- ggnetwork(net_obj, layout = "fruchtermanreingold", cell.jitter = 0.75)
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges() +
geom_nodes(aes(color = species)
theme_blank()
g <- ig_obj %>%
set_vertex_attr("species", value = species_vector)
net_obj <- intergraph::asNetwork(g)
n <- ggnetwork(net_obj, layout = "fruchtermanreingold", cell.jitter = 0.75)
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges() +
geom_nodes(aes(color = species) +
theme_blank()
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges() +
geom_nodes(aes(color = species)) +
theme_blank()
nodes = vertex_attr(ig_obj, name="name")
species_vector = c()
species = ""
for (name in nodes)
{
if (grepl("human", name, fixed = TRUE)){
species = "Homo sapiens"
} else if (grepl("mouse", name, fixed = TRUE)){
species = "Mus musculus"
} else {
species = "none"
}
species_vector = c(species_vector, species)
}
g <- ig_obj %>%
set_vertex_attr("species", value = species_vector)
net_obj <- intergraph::asNetwork(g)
n <- ggnetwork(net_obj, layout = "fruchtermanreingold", cell.jitter = 0.75)
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges() +
geom_nodes(aes(color = species)) +
theme_blank()
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges() +
geom_nodes(aes(color = species)) +
theme_blank()+
scale_color_manual(values=c("black", "purple", "darkorange"))
library(ggplot2)
p <- ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.7) +
theme_classic() +
scale_color_manual(values=c("purple", "darkorange")) +
ylab("Number of markers per cell type") +
xlab("Found in taxon") +
theme(
axis.title = element_text(size = 14),
axis.text.y = element_text(size = 11),
axis.text = element_text(size = 14, face = "italic")) +
theme(legend.position = "none")  +
theme(
axis.title.x = element_text(margin = unit(c(7, 0, 0, 0), "mm")),
axis.title.y = element_text(margin = unit(c(0, 7, 0, 0), "mm"))
)
library(WikidataQueryServiceR)
mm = query_wikidata('SELECT ?cell_type ?cell_typeLabel (count(?marker) as ?marker_count)
WHERE
{
?cell_type wdt:P31/wdt:P279* wd:Q189118.
?cell_type wdt:P703 wd:Q83310.
?cell_type wdt:P8872 ?marker.
SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
}
GROUP BY ?cell_type ?cell_typeLabel
')
hs = query_wikidata('SELECT ?cell_type ?cell_typeLabel (count(?marker) as ?marker_count)
WHERE
{
?cell_type wdt:P31/wdt:P279* wd:Q189118.
?cell_type wdt:P703 wd:Q15978631.
?cell_type wdt:P8872 ?marker.
SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
}
GROUP BY ?cell_type ?cell_typeLabel')
marker_count_mouse = data.frame(mm[,"marker_count"], "Mus musculus")
colnames(marker_count_mouse) = c("marker_count", "species")
marker_count_human = data.frame(hs[,"marker_count"], "Homo sapiens")
colnames(marker_count_human) = c("marker_count", "species")
marker_count = rbind(marker_count_human, marker_count_mouse)
marker_count
library(WikidataQueryServiceR)
mm = query_wikidata('SELECT ?cell_type ?cell_typeLabel (count(?marker) as ?marker_count)
WHERE
{
?cell_type wdt:P31/wdt:P279* wd:Q189118.
?cell_type wdt:P703 wd:Q83310.
?cell_type wdt:P8872 ?marker.
SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
}
GROUP BY ?cell_type ?cell_typeLabel
')
hs = query_wikidata('SELECT ?cell_type ?cell_typeLabel (count(?marker) as ?marker_count)
WHERE
{
?cell_type wdt:P31/wdt:P279* wd:Q189118.
?cell_type wdt:P703 wd:Q15978631.
?cell_type wdt:P8872 ?marker.
SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
}
GROUP BY ?cell_type ?cell_typeLabel')
library(WikidataQueryServiceR)
mm = query_wikidata('SELECT ?cell_type ?cell_typeLabel (count(?marker) as ?marker_count)
WHERE
{
?cell_type wdt:P31/wdt:P279* wd:Q189118.
?cell_type wdt:P703 wd:Q83310.
?cell_type wdt:P8872 ?marker.
SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
}
GROUP BY ?cell_type ?cell_typeLabel
')
marker_count_mouse = data.frame(mm[,"marker_count"], "Mus musculus")
colnames(marker_count_mouse) = c("marker_count", "species")
marker_count_human = data.frame(hs[,"marker_count"], "Homo sapiens")
colnames(marker_count_human) = c("marker_count", "species")
marker_count = rbind(marker_count_human, marker_count_mouse)
marker_count
library(ggplot2)
p <- ggplot(marker_count, aes(x=species, y=marker_count, colour = species)) +
geom_jitter(width = 0.1, height = 0, alpha=0.7) +
theme_classic() +
scale_color_manual(values=c("purple", "darkorange")) +
ylab("Number of markers per cell type") +
xlab("Found in taxon") +
theme(
axis.title = element_text(size = 14),
axis.text.y = element_text(size = 11),
axis.text = element_text(size = 14, face = "italic")) +
theme(legend.position = "none")  +
theme(
axis.title.x = element_text(margin = unit(c(7, 0, 0, 0), "mm")),
axis.title.y = element_text(margin = unit(c(0, 7, 0, 0), "mm"))
)
ggsave(filename = "markers.pdf", p, height = 5, width = 5)
p
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges() +
geom_nodes(aes(color = species)) +
theme_blank()+
scale_color_manual(values=c("purple", "darkorange","black"))
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges() +
geom_nodes(aes(color = species)) +
theme_blank()+
scale_color_manual(values=c("gray", "darkorange","black"))
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges() +
geom_nodes(aes(color = species), alpha=0.7) +
theme_blank()+
scale_color_manual(values=c("gray", "darkorange","black"))
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(alpha=0.) +
geom_nodes(aes(color = species), alpha=0.7) +
theme_blank()+
scale_color_manual(values=c("gray", "darkorange","black"))
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(alpha=0.9) +
geom_nodes(aes(color = species), alpha=0.9) +
theme_blank()+
scale_color_manual(values=c("purple", "darkorange","gray"))
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(alpha=0.9) +
geom_nodes(aes(color = species), alpha=0.9) +
theme_blank()+
scale_color_manual(values=c("purple", "darkorange","gray50"))
ggsave(filename = "cell_types.pdf", p2, height = 5, width = 5)
p2 <- ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(alpha=0.9) +
geom_nodes(aes(color = species), alpha=0.9) +
theme_blank()+
scale_color_manual(values=c("purple", "darkorange","gray50"))
ggsave(filename = "cell_types.pdf", p2, height = 5, width = 5)
ggsave(filename = "cell_types.pdf", p2, height = 5, width = 5)
ggsave(filename = "cell_types.pdf", p2, height = 50, width = 50)
ggsave(filename = "cell_types.pdf", p2, height = 50, width = 50, limitsize = FALSE)
ggsave(filename = "cell_types.pdf", p2, height = 5, width = 5, limitsize = FALSE)
ggsave(filename = "cell_types.pdf", p2, height = 20, width = 20, limitsize = FALSE)
